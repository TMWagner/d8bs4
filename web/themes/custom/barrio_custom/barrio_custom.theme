<?php

use Drupal\Component\Utility\Html;
use Drupal\Component\Utility\Xss;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;
use Drupal\views\Views;
use Drupal\taxonomy\Entity\Term;


/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 * 
 * Example on how to alter theme settings form
 * 
 */
function barrio_custom_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
}




/**
 * @param $variables
 *
 * Implement hook_preprocess_views_view_unformatted
 *
 * If this is for the Tools landing page view, we are going add two variables
 * - tools-category is a true/false flag to indicate whether there are new
 *   classes to add
 * - tools-category-classes is the string of classes
 *
 */
function barrio_custom_preprocess_views_view_unformatted(&$variables) {

  // Determine which view this is from
  $view = $variables['view'];
  $id = $view->storage->id();



  // We are only going execute the following if we are looking at the right view. (tools_landing_page)
  if ($id === 'tools_landing_page') {

    // @todo This blew up the website
    //$tools_array = $view->result;

    // Initialize class flag
    $variables['tools_category'] = FALSE;

    /**
     * Process each card from the $rows array
     * @var  $rows
     */
    // Load Array of Tool Rows
    $rows = $variables["rows"];
    foreach ($rows as $tool_key =>$item) {

      $taxonomy_array = $item["content"]["#row"]->_entity->get('field_tools_filter_category')->getValue();

      //loop through result_array to get each taxonomy "class". if array is not empty

      $class_string = null;
      if (!empty($taxonomy_array)) {
        // We have classes to add for this tool item
        $class_string = NULL;
        foreach ($taxonomy_array as $key => $value) {
          // do stuff
          $target_id = $value['target_id'];

          /**
           * Fetch the new class for given taxonomy term
           *
           * See: https://www.frobiovox.com/posts/2016/03/28/simplify-drupal-8-field-value-calls.html
           */

          $taxo = term::load($target_id);

          $field_title = $taxo->get("field_tool_class");
          $class_value = $field_title->value;

          $class_string = $class_string . ' ' . $class_value;
        }
      }

      // Send string of new classes - if there are any.
      /** Set the flag  and initialize array item */
      if ($class_string) {
        $variables['tools_category'] = TRUE;
        $variables['tools_category_classes'][] = $class_string;
      }

    } // end of the outer loop

  }

}






/**
 * Implementation of hook_preprocess_HOOK
 * @param $variables
 *
 * Cute little php test site
 * https://www.w3resource.com/php/function-reference/array_key_exists.php
 *
 */
//function barrio_custom_preprocess_(&$variables) {
//
//  $test = $variables;
//  $variables['publications_listings'] = TRUE;
//
//  $debug1 = FALSE;
//
////  //Test the key first
//  if (array_key_exists('first', $variables)) {
//    $debug1 = true;
//  }
//
//  if (array_key_exists('element', $variables)) {
//    $debug1 = true;
//  }
////
////  if (array_key_exists("story", $arr) && array_key_exists("message", $arr)) {
////    // Both keys exist.
////  }
//
//  //  $test2 = $variables["element"]["#name"];
////  if ($variables["element"]["#name"] == 'profile_basic_content') {
////    // Create a new variable for Class and set it to "profile-swap"
////    $test3 = $test2;
////  }
//  $debug1 = true;
//
//}