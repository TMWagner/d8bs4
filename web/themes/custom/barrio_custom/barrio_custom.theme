<?php

use Drupal\Component\Utility\Html;
use Drupal\Component\Utility\Xss;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;
use Drupal\views\Views;
use Drupal\taxonomy\Entity\Term;


/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 * 
 * Example on how to alter theme settings form
 * 
 */
function barrio_custom_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
}


/**
 * @param $variables
 *
 * If this is for the Tools landing page view, we are going add two variables
 * - tools-category is a true/false flag to indicate whether there are new classes to add
 * - tools-category-classes is the string of classes
 *
 */
function barrio_custom_preprocess_views_view_unformatted(&$variables) {

  // Deterimine which view this is from
  $tempvar = $variables;


  $view = $variables['view'];
  $id = $view->storage->id();


  //@todo interate through this list of "field_tools_filter_category'
  // machine name from Tools = field_tools_filter_category

  $tools_array = $view->result;

  foreach ($tools_array as $item) {
    // Process each of the tools cards

    $debug_index = $item;
    $taxonomy_array = $item->_entity->get('field_tools_filter_category')->getValue();

    //@todo make sure there is something in the result array (check for empty array)
    //loop through result_array to get each taxonomy "class". if array is not empty

    if (!empty($taxonomy_array)) {
      $debug_string = TRUE;
      $class_string = null;

    }


    //End inner loop

  }

  //
  $result = $view->result[0]->_entity->get('field_tools_filter_category');

//  //@todo loop through this array too
//  // This is the catergory - don't need it here.
//  $result_array = $result->list[1];

  // Bingo!
  // @todo now loop through the array and build the string of classes.
  $result_array2 = $result->getValue();

  //  @todo not needed, just interesting :)
  $result_count = $result->count();

  $class_string = null;
  foreach($result_array as $key=>$value) {
    // do stuff
    $target_id = $value['target_id'];

    /**
     * Fetch the new class for given taxonomy term
     *
     * See: https://www.frobiovox.com/posts/2016/03/28/simplify-drupal-8-field-value-calls.html
     */

//    $taxo = term::load(33);
    $taxo = term::load($target_id);

    $field_title  = $taxo->get("field_tool_class");
    $class_value = $field_title->value;

    $class_string = $class_string . ' ' . $class_value;

  }

  $debug_string = $class_string;



  /** Set the flag  */
  $variables[ 'tools-category'] = FALSE;
  if ($class_string) {
    $variables['tools-category'] = TRUE;
    $variables['tools-category-classes'] = $class_string;
  }
  $tempvar = $variables;

}






/**
 * Implementation of hook_preprocess_HOOK
 * @param $variables
 *
 * Cute little php test site
 * https://www.w3resource.com/php/function-reference/array_key_exists.php
 *
 */
//function barrio_custom_preprocess_(&$variables) {
//
//  $test = $variables;
//  $variables['publications_listings'] = TRUE;
//
//  $debug1 = FALSE;
//
////  //Test the key first
//  if (array_key_exists('first', $variables)) {
//    $debug1 = true;
//  }
//
//  if (array_key_exists('element', $variables)) {
//    $debug1 = true;
//  }
////
////  if (array_key_exists("story", $arr) && array_key_exists("message", $arr)) {
////    // Both keys exist.
////  }
//
//  //  $test2 = $variables["element"]["#name"];
////  if ($variables["element"]["#name"] == 'profile_basic_content') {
////    // Create a new variable for Class and set it to "profile-swap"
////    $test3 = $test2;
////  }
//  $debug1 = true;
//
//}