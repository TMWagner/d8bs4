<?php

/**
 * @file
 * Contains idm.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\Node;
use \Drupal\views\ViewExecutable;
use Drupal\Component\Utility\UrlHelper;
use Drupal\Component\Serialization\Json;
use Drupal\Core\Field\Plugin\Field\FieldType\EntityReferenceItem;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;
use Drupal\views\Form\ViewsForm;
use Drupal\views\Plugin\views\cache\CachePluginBase;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\Plugin\views\query\Sql;




/**
 * Implements hook_help().
 */
function idm_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the idm module.
    case 'help.page.idm':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('IDM general module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 * Ref:
 *
 */
function idm_theme() {
  return [
    'idm' => [
      'render element' => 'children',
    ],
  ];
}




/**
 * Implements hook_entity_view()
 */
function idm_entity_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {

  // Only do the extra work if the component is configured to be displayed.
  // This assumes a 'mymodule_addition' extra field has been defined for the
  // entity bundle in hook_entity_extra_field_info().
  // @todo see https://api.drupal.org/api/drupal/core%21modules%21views%21views.api.php/function/hook_field_views_data_views_data_alter/8.6.x


  $entity_type = $entity->getEntityType()->id();
  $debug = $entity;

  if ($entity_type === 'node') {
    //do some processing
    $debug = "here we are";
    $node_type = $entity->getType();
    $debug = $view_mode;

  }

//  if ($entity->getEntityType()->id() === 'node') {
//
  ////    $build['awesome'] =  [
  ////      '#markup' => '<marquee>IDM V4 amazing content</marquee>',
  ////      '#allowed_tags' => ['marquee'],
  ////    ];
  ////    $build['moretext'] = [
  ////      '#markup' => '<h2>IDM V4 amazing content</h2>',
  ////      '#weight' => 99
  ////    ];
  ////  }

}


/**
 * @param array $info
 */
function idm_element_info_alter(array &$info) {

  // Decrease the default size of textfields.
  if (isset($info['textfield']['#size'])) {
    $info['textfield']['#size'] = 40;
  }
}

/**
 * @param array $attachments
 * Hook_page_attachements
 * Attach libraries
 */
function idm_page_attachments(array &$attachments) {

  // Unconditionally attach an asset to the page.
  $attachments['#attached']['library'][] = 'core/domready';
  $attachments['#attached']['library'][] = 'core/jquery';
  $attachments['#attached']['library'][] = 'idm/jqueryui';
  $attachments['#attached']['library'][] = 'idm/idm';
  $attachments['#attached']['library'][] = 'idm/fontawesome';


  //@todo Not sure we want this on ALL pages...
  //20190222:tmw put this in to get modal working on non-admin pages
  $attachments['#attached']['library'][] = 'core/drupal.dialog.ajax';


  // Get the current path.
  $path = $current_path = \Drupal::service('path.current')->getPath();

  $pathpieces = explode("/", $path);
  if ($pathpieces[1] === 'node') {
    //load the node and check for bundle
    $bundle = Drupal\node\Entity\Node::load($pathpieces[2])->bundle();

    if($bundle === 'research') {
      $attachments['#attached']['library'][] = 'idm/research';
      $attachments['#attached']['library'][] = 'idm/slick';
    }
  }




  //We need to define a library specific to the home page (node 168)
  // NavTab is being used for the "How we work" block"
  if ($path == '/node/168') {
    $attachments['#attached']['library'][] = 'idm/navtab';
    $attachments['#attached']['library'][] = 'idm/rvtab';
  };

  // Define library for RLP
  if ($path == '/rlp') {
    $attachments['#attached']['library'][] = 'idm/research';
  };

  if (fnmatch("/rlp/*", $path)) {
    $attachments['#attached']['library'][] = 'idm/research';
    $attachments['#attached']['library'][] = 'idm/slick';
  }

  /**
   * This is temp code: adding jquery collapse
   * tmw: 2019/01/12
   */
  if ($path == '/node/169') {
//    $attachments['#attached']['library'][] = 'idm/jqcollapse';
    $attachments['#attached']['library'][] = 'idm/slick';
  };

  /**
   * Attach library for Tools page(s)
   * tmw: 2019/03/8
   */
  if ($path == '/node/170') {
    $attachments['#attached']['library'][] = 'idm/tools';
  };

  //@todo drop this check and just use the fnmatch case?
  if ($path == '/tools') {
    $attachments['#attached']['library'][] = 'idm/tools';
  };

  if (fnmatch("/tools/*", $path)) {
    $attachments['#attached']['library'][] = 'idm/tools';
  }


}


